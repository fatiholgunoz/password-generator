#Password Generator Project
import random
letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

print("Welcome to the PyPassword Generator!")
nr_letters = int(input("How many letters would you like in your password?\n"))
nr_symbols = int(input(f"How many symbols would you like?\n"))
nr_numbers = int(input(f"How many numbers would you like?\n"))

#Eazy Level - Order not randomised:
#e.g. 4 letter, 2 symbol, 2 number = JduE&!91

"""
for number in range(0,nr_letters):
  print(letters[random.randint(0,len(letters)-1)], end="")
for number in range(0,nr_symbols):
  print(symbols[random.randint(0,len(symbols)-1)], end="")
for number in range(0,nr_numbers):
  print(numbers[random.randint(0,len(numbers)-1)], end="")
"""

#Hard Level - Order of characters randomised:
#e.g. 4 letter, 2 symbol, 2 number = g^2jk8&P

# The way Angela Yu did it (used shuffle func.)
"""
pwchars = []
for number in range(0,nr_letters):
  pwchars.append(letters[random.randint(0,len(letters)-1)])
for number in range(0,nr_symbols):
  pwchars.append(symbols[random.randint(0,len(symbols)-1)])
for number in range(0,nr_numbers):
  pwchars.append(numbers[random.randint(0,len(numbers)-1)])

print(pwchars)
random.shuffle(pwchars)
print(pwchars)

password = ""
for char in pwchars:
  password = password + char

print(f"Here is your password: {password}")
"""


# Trial 1: Adding random chars in RANDOM ORDER
# Chars are simply printed one after another,
# Could be added into a list.

nr_letters_left = nr_letters
nr_symbols_left = nr_symbols
nr_numbers_left = nr_numbers

print("Here is your password, generated by adding random chars: ", end="")
while (nr_letters_left+nr_symbols_left+nr_numbers_left) > 0:
  type = random.randint(0,2)
  if type == 0 and (nr_letters_left > 0):
    print(letters[random.randint(0,len(letters)-1)], end="")
    nr_letters_left = nr_letters_left - 1
    
  elif type == 1 and (nr_symbols_left > 0):
    print(symbols[random.randint(0,len(symbols)-1)], end="")
    nr_symbols_left = nr_symbols_left - 1 
    
  elif type == 2 and (nr_numbers_left > 0):
    print(numbers[random.randint(0,len(numbers)-1)], end="")
    nr_numbers_left = nr_numbers_left - 1


# Trial 2: Shuffling the non-randomized password,
# WITHOUT USING random.randint

pwchars = []
for number in range(0,nr_letters):
  pwchars.append(letters[random.randint(0,len(letters)-1)])
for number in range(0,nr_symbols):
  pwchars.append(symbols[random.randint(0,len(symbols)-1)])
for number in range(0,nr_numbers):
  pwchars.append(numbers[random.randint(0,len(numbers)-1)])

# Shuffling here, two random chars selected and switched in between
# Repeated for n times(n=length of password to mix it enough)
for num_of_chars in range(0,len(pwchars)):
  slot_1 = random.randint(0,len(pwchars)-1)
  slot_2 = random.randint(0,len(pwchars)-1)
# Chose two random slots(characters)
  pwchars[slot_1],pwchars[slot_2] = pwchars[slot_2],pwchars[slot_1]

password = ""
for char in pwchars:
  password = password + char

print(f"\nHere is your password, generated by shuffling: {password}")
